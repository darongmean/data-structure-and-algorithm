;; jmh-samples project at https://github.com/openjdk/jmh.

{:benchmarks [{:ns   adwh.basic.accumulating-and-tupling
               :fn   [steep steep-tupling]
               :args [:state/nat-steep]}
              {:ns   adwh.exhausted-search.implicit-search.n-queens
               :fn   [queens-all
                      queens-fuse-new-elem-end-all
                      queens-fuse-new-elem-front-all
                      queens-first
                      queens-fuse-new-elem-end-first
                      queens-fuse-new-elem-front-first]
               :args [:param/small-n]}
              {:ns   adwh.exhausted-search.depth-first-search.n-queens
               :fn   [queens-all
                      queens-bits-all
                      queens-first]
               :args [:param/small-n]}
              {:ns   adwh.exhausted-search.implicit-search.expressions-with-a-given-sum
               :fn   [solutions-all
                      solutions-fuse-all
                      solutions-first
                      solutions-fuse-first]
               :args [:param/large-n]}
              {:ns   adwh.exhausted-search.breadth-first-search.lunar-landing-puzzle
               :fn   [safe-landings-all
                      safe-landings-first]
               :args [:state/lunar-landing-board]}]
 :states     {:nat-steep           {:fn   adwh.benchmark/gen-nat-steep
                                    :args [:param/large-n]}
              :lunar-landing-board {:fn   adwh.benchmark/gen-lunar-landing-puzzle-board
                                    :args []}}
 :params     {:large-n [10 20 40 80]
              :small-n [1 2 4 8]}
 :options    {:jmh/default {:mode               :average
                            :threads            10
                            :ops-per-invocation 10
                            :output-time-unit   :ms
                            :timeout            [10 :seconds]
                            :fork               {:count   1
                                                 :warmups 0}
                            :measurement        {:time [100 :ms]}
                            :warmup             {:time [100 :ms]}}}}
